




安装jdk
yum install -y java-1.8.0-openjdk-devel


# 1. 创建项目目录
mkdir tomcat-docker && cd tomcat-docker

# 2. 准备Web应用
# Ƒ) 创建目录结构
mkdir -p myapp/WEB-INF/classes

# ƒ) 创建JSP文件
cat > myapp/index.jsp <<EOF
<%@ page language=";java"; contentType=";text/html; charset=UTF-8"; pageEncoding=";UTF-8";%>
<!DOCTYPE html>
<html>
<head>
    <title>Hello World</title>
</head>
<body>
    <h1>Hello from Tomcat Docker!</h1>
    <p>当前时间:<%= new java.util.Date() %></p>
</body>
</html>
EOF

# Ɠ) 创建web.xml配置文件
cat > myapp/WEB-INF/web.xml <<EOF
<?xml version=";1.0"; encoding=";UTF-8";?>
<web-app xmlns=";http://xmlns.jcp.org/xml/ns/javaee";
         xmlns:xsi=";http://www.w3.org񳏁/XMLSchema-instance";
         xsi:schemaLocation=";http://xmlns.jcp.org/xml/ns/javaee 
         http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd";
         version=";4.0";>
</web-app>
EOF

# Ɣ) 打包WAR文件
jar cvf myapp.war -C myapp .

# 3. 创建Dockerfile
cat > Dockerfile <<EOF
FROM tomcat:9.0-jdk11-corretto
RUN rm -rf /usr/local/tomcat/webapps/*
COPY myapp.war /usr/local/tomcat/webapps/
ENV JAVA_OPTS=";-Xms512m -Xmx1024m";
EXPOSE 8080
CMD [";catalina.sh";, ";run";]
EOF

# 4. 创建.dockerignore文件
echo ";*.log"; > .dockerignore

# 5. 构建镜像
docker build -t my-tomcat-app .

# 6. 运行容器
docker run -d -p 8080:8080 --name my-tomcat-container my-tomcat-app

# 验证命令
docker ps
docker logs my-tomcat-container
 
